Django==3.2.4
cx_oracle
virtualenv
django-cors-headers
djangorestframework
requests


#########################################################################
##### PROCEDIMIENTOS DE ALMACENADO PARA FUNCIONAMIENTO DE LAS API'S #####
#########################################################################
'''
------------------------- SP CARGO -----------------------------------------------------------
create sequence sec_cargo
  start with 1
  increment by 1
  maxvalue 99999
  minvalue 1;
  
  
  
create or replace PROCEDURE CARGO_ELIMINAR (v_id_cargo Integer, v_salida out number) is
begin 
    UPDATE cargo
    SET estado_fila = '0'
    WHERE id_cargo = v_id_cargo;
    commit;
    v_salida:=1;
  
  exception when others then v_salida:=0;



end CARGO_ELIMINAR;


create or replace PROCEDURE CARGO_AGREGAR 
(
    v_nombre varchar2,
    v_estado_fila char,
    v_salida out number

) is
begin 
  insert into CARGO(id_cargo, nombre_cargo,estado_fila) values(sec_cargo.nextval,v_nombre,v_estado_fila);
  commit;
  v_salida:=1;
  
  exception when others then v_salida:=0;

end CARGO_AGREGAR;


create or replace PROCEDURE CARGO_MODIFICAR (
    v_id Integer,
    v_nombre_cargo VARCHAR2,
    v_salida out number

) is
begin 
    UPDATE cargo
    SET nombre_cargo = v_nombre_cargo
    WHERE id_cargo = v_id;
    commit;
    v_salida:=1;
  
  exception when others then v_salida:=0;


end CARGO_MODIFICAR;

 

CREATE OR REPLACE EDITIONABLE PROCEDURE CARGO_LISTAR (cur_listar out SYS_REFCURSOR) 
is
begin
  open cur_listar for select * from cargo;
end CARGO_LISTAR;



-------------------------------------------------------------------------------------------------------------------
------------------------------------- SP usuarios -----------------------------------------------------------------
create sequence sec_usuario
  start with 1
  increment by 1
  maxvalue 99999999999999999999
  minvalue 1;


create or replace PROCEDURE USUARIO_ELIMINAR (v_correo varchar2, v_salida out number) is
begin 
    UPDATE usuario
    SET usuario_vigente = '0'
    WHERE correo_usuario = v_correo;
    commit;
    v_salida:=1;

  exception when others then v_salida:=0;

end USUARIO_ELIMINAR;


create or replace PROCEDURE USUARIO_AGREGAR 
(
    v_numero_identeificacion_usuario varchar2,
    v_nombre_usuario varchar2,
    v_direccion_usuario varchar2,
    v_telefono_usuario varchar2,
    v_correo_usuario varchar2,
    v_contrasena_usuario varchar2,
    v_usuario_vigente char,
    v_fecha_creacion_usuario Date,
    v_administrador_usuario char,
    v_id_cargo Integer,
    v_id_empresa Integer,
    v_id_ciudad Integer,
    v_salida OUT NUMBER

) is
begin 
  insert into USUARIO(id_usuario,NUMERO_IDENTIFICACION_USUARIO,nombre_usuario,direccion_usuario,telefono_usuario,correo_usuario,contrasena_usuario,usuario_vigente,fecha_creacion_usuario,administrador_usuario,id_cargo,id_empresa,id_ciudad) 
  values(sec_usuario.nextval,v_numero_identeificacion_usuario,v_nombre_usuario,v_direccion_usuario,v_telefono_usuario,v_correo_usuario,v_contrasena_usuario,v_usuario_vigente,v_fecha_creacion_usuario,v_administrador_usuario,v_id_cargo,v_id_empresa,v_id_ciudad);
  commit;
  v_salida:=1; 
  
  exception when others then v_salida:=0;

end USUARIO_AGREGAR;


create or replace PROCEDURE USUARIO_MODIFICAR (
    v_numero_identeificacion_usuario varchar2,
    v_nombre_usuario varchar2,
    v_direccion_usuario varchar2,
    v_telefono_usuario varchar2,
    v_correo_usuario varchar2,
    v_contrasena_usuario varchar2,
    v_administrador_usuario char,
    v_id_cargo Integer,
    v_id_empresa Integer,
    v_id_ciudad Integer,
    v_salida OUT NUMBER

) is
begin 
    UPDATE usuario
    SET nombre_usuario = v_nombre_usuario,
    direccion_usuario = v_direccion_usuario,
    telefono_usuario = v_telefono_usuario,
    correo_usuario = v_correo_usuario,
    contrasena_usuario = v_contrasena_usuario,
    administrador_usuario = v_administrador_usuario,
    id_cargo = v_id_cargo,
    id_empresa = v_id_empresa,
    id_ciudad = v_id_ciudad
    WHERE NUMERO_IDENTIFICACION_USUARIO = v_numero_identeificacion_usuario;
    commit;
    v_salida:=1;
  
  exception when others then v_salida:=0;


end USUARIO_MODIFICAR;

 

CREATE OR REPLACE EDITIONABLE PROCEDURE USUARIO_LISTAR (cur_listar out SYS_REFCURSOR) 
is
begin
  open cur_listar for select * from usuario;
end USUARIO_LISTAR;

------------------------------------------------------------------------------------------------------------------------------
----------------------------------------SP CONTRATO --------------------------------------------------------------------------

create or replace PROCEDURE CONTRATO_ELIMINAR (v_id_contrato Integer) is
begin 
    DELETE contrato
    WHERE id_contrato = v_id_contrato;
    commit;

end CONTRATO_ELIMINAR;


create or replace PROCEDURE CONTRATO_AGREGAR (v_documento_contrato BFILE, v_fecha_contrato date,v_rut_cliente_externo integer,v_rut_administrador integer,v_tipo_contrato varchar2) is
begin 
  insert into CONTRATO(id_contrato,documento_contrato,fecha_contrato,rut_cliente_externo,rut_administrador,tipo_contrato) 
  values(ISEQ$$_76839.nextval,v_documento_contrato,v_fecha_contrato,v_rut_cliente_externo,v_rut_administrador,v_tipo_contrato);
  commit;

end CONTRATO_AGREGAR;


create or replace PROCEDURE CONTRATO_MODIFICAR (v_id_contrato Integer,v_documento_contrato BFILE, v_fecha_contrato date,v_rut_cliente_externo integer,v_rut_administrador integer,v_tipo_contrato varchar2) is
begin 
    UPDATE contrato
    SET contrato.documento_contrato = v_documento_contrato,
    contrato.fecha_contrato = v_fecha_contrato,
    contrato.rut_cliente_externo = v_rut_cliente_externo,
    contrato.rut_administrador = v_rut_administrador,
    contrato.tipo_contrato = v_tipo_contrato
    WHERE id_contrato = v_id_contrato;
    commit;

end CONTRATO_MODIFICAR;

 

 CREATE OR REPLACE EDITIONABLE PROCEDURE CONTRATO_LISTAR (cur_listar out SYS_REFCURSOR) 
is

begin
    open cur_listar for select '{"id_contrato": '|| id_contrato||', "documento_contrato": "'||documento_contrato||',"fecha_contrato": "'||fecha_contrato||',"rut_cliente_externo": "'||cliente_externo_rut_cliente_externo||',"rut_administrador": "'||administrador_rut_administrador||',"tipo_contrato": "'||tipo_contrato||'"}' request from contrato;
end CONTRATO_LISTAR;


------------------------------------------------------------------------------------------------------------------------------
----------------------------------------SP PRODUCTO --------------------------------------------------------------------------

create or replace PROCEDURE PRODUCTO_ELIMINAR (v_id_producto Integer) is
begin 
    DELETE PRODUCTO
    WHERE id_producto = v_id_producto;
    commit;

end PRODUCTO_ELIMINAR;


create or replace PROCEDURE PRODUCTO_AGREGAR (v_nombre_producto varchar2, v_cantidad_producto integer,rut_proveedor integer) is
begin 
  insert into PRODUCTO(id_producto,nombre_producto,cantidad_producto,rut_proveedor) 
  values(ISEQ$$_76844.nextval,v_nombre_producto,v_cantidad_producto,rut_proveedor);
  commit;

end PRODUCTO_AGREGAR;


create or replace PROCEDURE PRODUCTO_MODIFICAR (v_id_producto Integer,v_nombre_producto varchar2, v_cantidad_producto integer,v_rut_proveedor integer) is
begin 
    UPDATE PRODUCTO
    SET nombre_producto = v_nombre_producto,
    cantidad_producto = v_cantidad_producto,
    rut_proveedor = v_rut_proveedor
    WHERE id_producto = v_id_producto;
    commit;

end PRODUCTO_MODIFICAR;

 

 CREATE OR REPLACE EDITIONABLE PROCEDURE PRODUCTO_LISTAR (cur_listar out SYS_REFCURSOR) 
is

begin
    open cur_listar for select '{"id_producto": '|| id_producto||', "nombre_producto": "'||nombre_producto||',"cantidad_producto": "'||cantidad_producto||',"rut_proveedor": "'||rut_proveedor||',"rut_administrador": "'||'"}' request from PRODUCTO;
end PRODUCTO_LISTAR;

------------------------------------------------------------------------------------------------------------------------------
----------------------------------------SP LOGIN -----------------------------------------------------------------------------
create or replace PROCEDURE                   "LOGIN" 
(
    v_correo varchar2,
    v_contrasena varchar2,
    cur out SYS_REFCURSOR
)
is
begin
    open cur for select nombre_usuario,id_cargo,correo_usuario,fecha_sesion_usuario from usuario where correo_usuario = v_correo and contrasena_usuario = v_contrasena;
end LOGIN;

'''