Django==3.2.4
cx_oracle
virtualenv
django-cors-headers
djangorestframework
requests


#########################################################################
##### PROCEDIMIENTOS DE ALMACENADO PARA FUNCIONAMIENTO DE LAS API'S #####
#########################################################################
'''
------------------------- SP CARGO -----------------------------------------------------------
create sequence sec_cargo
  start with 1
  increment by 1
  maxvalue 99999
  minvalue 1;
  
  
  
create or replace PROCEDURE CARGO_ELIMINAR (v_id_cargo Integer, v_salida out number) is
begin 
    UPDATE cargo
    SET estado_fila = '0'
    WHERE id_cargo = v_id_cargo;
    commit;
    v_salida:=1;
  
  exception when others then v_salida:=0;



end CARGO_ELIMINAR;


create or replace PROCEDURE CARGO_AGREGAR 
(
    v_nombre varchar2,
    v_estado_fila char,
    v_salida out number

) is
begin 
  insert into CARGO(id_cargo, nombre_cargo,estado_fila) values(sec_cargo.nextval,v_nombre,v_estado_fila);
  commit;
  v_salida:=1;
  
  exception when others then v_salida:=0;

end CARGO_AGREGAR;


create or replace PROCEDURE CARGO_MODIFICAR (
    v_id Integer,
    v_nombre_cargo VARCHAR2,
    v_salida out number

) is
begin 
    UPDATE cargo
    SET nombre_cargo = v_nombre_cargo
    WHERE id_cargo = v_id;
    commit;
    v_salida:=1;
  
  exception when others then v_salida:=0;


end CARGO_MODIFICAR;

 

CREATE OR REPLACE EDITIONABLE PROCEDURE CARGO_LISTAR (cur_listar out SYS_REFCURSOR) 
is
begin
  open cur_listar for select * from cargo;
end CARGO_LISTAR;



-------------------------------------------------------------------------------------------------------------------
------------------------------------- SP ADMINISTRADOR -----------------------------------------------------------
create or replace PROCEDURE ADMINISTRADOR_ELIMINAR (v_rut_administrador Integer) is
begin 
    DELETE administrador
    WHERE administrador.rut_administrador = v_rut_administrador;
    commit;

end ADMINISTRADOR_ELIMINAR;


create or replace PROCEDURE ADMINISTRADOR_AGREGAR (
v_rut_administrador Integer, 
v_nombre_administrador varchar2,
v_direccion_administrador VARCHAR2,
v_telefono_administrador INTEGER, 
v_correo_administrador VARCHAR2, 
v_contrasena_administrador VARCHAR2,
v_id_cargo INTEGER) is
begin 
  insert into administrador(rut_administrador,
  nombre_administrador,
  direccion_administrador,
  telefono_administrador,
  correo_administrador,
  contrasena_administrador,
  cargo_id_cargo) values(v_rut_administrador,v_nombre_administrador,v_direccion_administrador,v_telefono_administrador,v_correo_administrador,v_contrasena_administrador,v_id_cargo);
  commit;

end ADMINISTRADOR_AGREGAR;


create or replace PROCEDURE ADMINISTRADOR_MODIFICAR (v_rut_administrador Integer,v_nombre_administrador varchar2,
v_direccion_administrador VARCHAR2,
v_telefono_administrador INTEGER, 
v_correo_administrador VARCHAR2, 
v_contrasena_administrador VARCHAR2,
v_id_cargo INTEGER) is
begin 
    UPDATE administrador
    SET nombre_administrador = v_nombre_administrador,
    direccion_administrador = v_direccion_administrador,
    telefono_administrador=v_telefono_administrador, 
    correo_administrador=v_correo_administrador,
    contrasena_administrador=v_contrasena_administrador,
    cargo_id_cargo = v_id_cargo
    WHERE rut_administrador = v_rut_administrador;
    commit;

end ADMINISTRADOR_MODIFICAR;

 

 CREATE OR REPLACE EDITIONABLE PROCEDURE ADMINISTRADOR_LISTAR (cur_listar out SYS_REFCURSOR) 
is

begin
  open cur_listar for select '{"rut_administrador": '|| rut_administrador||', "nombre_administrador": "'||nombre_administrador||',"direccion_administrador": "'||direccion_administrador||',"telefono_administrador": "'||telefono_administrador||',"correo_administrador": "'||correo_administrador||',"contrasena_administrador": "'||contrasena_administrador||',"cargo_id_cargo": "'||cargo_id_cargo||'"}' request from administrador;
end ADMINISTRADOR_LISTAR;
------------------------------------------------------------------------------------------------
-------------------------------SP Cliente_Externo----------------------------------------------
create or replace PROCEDURE CLIENTE_EXTERNO_ELIMINAR (v_rut_CLIENTE_EXTERNO Integer) is
begin 
    DELETE CLIENTE_EXTERNO
    WHERE rut_CLIENTE_EXTERNO = v_rut_CLIENTE_EXTERNO;
    commit;

end CLIENTE_EXTERNO_ELIMINAR;


create or replace PROCEDURE CLIENTE_EXTERNO_AGREGAR (
v_rut_CLIENTE_EXTERNO Integer, 
v_nombre_CLIENTE_EXTERNO varchar2,
v_direccion_CLIENTE_EXTERNO VARCHAR2,
v_telefono_CLIENTE_EXTERNO INTEGER, 
v_correo_CLIENTE_EXTERNO VARCHAR2, 
v_contrasena_CLIENTE_EXTERNO VARCHAR2,
v_id_cargo INTEGER) is
begin 
  insert into CLIENTE_EXTERNO(rut_CLIENTE_EXTERNO,
  nombre_CLIENTE_EXTERNO,
  direccion_CLIENTE_EXTERNO,
  telefono_CLIENTE_EXTERNO,
  correo_CLIENTE_EXTERNO,
  contrasena_CLIENTE_EXTERNO,
  cargo_id_cargo) values(v_rut_CLIENTE_EXTERNO,v_nombre_CLIENTE_EXTERNO,v_direccion_CLIENTE_EXTERNO,v_telefono_CLIENTE_EXTERNO,v_correo_CLIENTE_EXTERNO,v_contrasena_CLIENTE_EXTERNO,v_id_cargo);
  commit;

end CLIENTE_EXTERNO_AGREGAR;


create or replace PROCEDURE CLIENTE_EXTERNO_MODIFICAR (v_rut_CLIENTE_EXTERNO Integer,v_nombre_CLIENTE_EXTERNO varchar2,
v_direccion_CLIENTE_EXTERNO VARCHAR2,
v_telefono_CLIENTE_EXTERNO INTEGER, 
v_correo_CLIENTE_EXTERNO VARCHAR2, 
v_contrasena_CLIENTE_EXTERNO VARCHAR2,
v_id_cargo INTEGER) is
begin 
    UPDATE CLIENTE_EXTERNO
    SET nombre_CLIENTE_EXTERNO = v_nombre_CLIENTE_EXTERNO,
    direccion_CLIENTE_EXTERNO = v_direccion_CLIENTE_EXTERNO,
    telefono_CLIENTE_EXTERNO = v_telefono_CLIENTE_EXTERNO, 
    correo_CLIENTE_EXTERNO = v_correo_CLIENTE_EXTERNO,
    contrasena_CLIENTE_EXTERNO = v_contrasena_CLIENTE_EXTERNO,
    cargo_id_cargo = v_id_cargo
    WHERE rut_CLIENTE_EXTERNO = v_rut_CLIENTE_EXTERNO;
    commit;

end CLIENTE_EXTERNO_MODIFICAR;

 

 CREATE OR REPLACE EDITIONABLE PROCEDURE CLIENTE_EXTERNO_LISTAR (cur_listar out SYS_REFCURSOR) 
is

begin
  open cur_listar for select '{"rut_CLIENTE_EXTERNO": '|| rut_CLIENTE_EXTERNO||',"nombre_CLIENTE_EXTERNO": "'||nombre_CLIENTE_EXTERNO||',"direccion_CLIENTE_EXTERNO": "'||direccion_CLIENTE_EXTERNO||',"telefono_CLIENTE_EXTERNO": "'||telefono_CLIENTE_EXTERNO||',"correo_CLIENTE_EXTERNO": "'||correo_CLIENTE_EXTERNO||',"contrasena_CLIENTE_EXTERNO": "'||contrasena_CLIENTE_EXTERNO||',"cargo_id_cargo": "'||cargo_id_cargo||'"}' request from CLIENTE_EXTERNO;
end CLIENTE_EXTERNO_LISTAR;
--------------------------------------------------------------------------------------------------------------------------
------------------------------------------SP CLIENTE_INTERNO--------------------------------------------------------------
create or replace PROCEDURE CLIENTE_INTERNO_ELIMINAR (v_rut_CLIENTE_INTERNO Integer) is
begin 
    DELETE CLIENTE_INTERNO
    WHERE rut_CLIENTE_INTERNO = v_rut_CLIENTE_INTERNO;
    commit;

end CLIENTE_INTERNO_ELIMINAR;


create or replace PROCEDURE CLIENTE_INTERNO_AGREGAR (
v_rut_CLIENTE_INTERNO Integer, 
v_nombre_CLIENTE_INTERNO varchar2,
v_direccion_CLIENTE_INTERNO VARCHAR2,
v_telefono_CLIENTE_INTERNO INTEGER, 
v_correo_CLIENTE_INTERNO VARCHAR2, 
v_contrasena_CLIENTE_INTERNO VARCHAR2,
v_id_cargo INTEGER) is
begin 
  insert into CLIENTE_INTERNO(rut_CLIENTE_INTERNO,
  nombre_CLIENTE_INTERNO,
  direccion_CLIENTE_INTERNO,
  telefono_CLIENTE_INTERNO,
  correo_CLIENTE_INTERNO,
  contrasena_CLIENTE_INTERNO,
  cargo_id_cargo) values(v_rut_CLIENTE_INTERNO,v_nombre_CLIENTE_INTERNO,v_direccion_CLIENTE_INTERNO,v_telefono_CLIENTE_INTERNO,v_correo_CLIENTE_INTERNO,v_contrasena_CLIENTE_INTERNO,v_id_cargo);
  commit;

end CLIENTE_INTERNO_AGREGAR;


create or replace PROCEDURE CLIENTE_INTERNO_MODIFICAR (v_rut_CLIENTE_INTERNO Integer,v_nombre_CLIENTE_INTERNO varchar2,
v_direccion_CLIENTE_INTERNO VARCHAR2,
v_telefono_CLIENTE_INTERNO INTEGER, 
v_correo_CLIENTE_INTERNO VARCHAR2, 
v_contrasena_CLIENTE_INTERNO VARCHAR2,
v_id_cargo INTEGER) is
begin 
    UPDATE CLIENTE_INTERNO
    SET nombre_CLIENTE_INTERNO = v_nombre_CLIENTE_INTERNO,
    direccion_CLIENTE_INTERNO = v_direccion_CLIENTE_INTERNO,
    telefono_CLIENTE_INTERNO = v_telefono_CLIENTE_INTERNO, 
    correo_CLIENTE_INTERNO = v_correo_CLIENTE_INTERNO,
    contrasena_CLIENTE_INTERNO = v_contrasena_CLIENTE_INTERNO,
    cargo_id_cargo = v_id_cargo
    WHERE rut_CLIENTE_INTERNO = v_rut_CLIENTE_INTERNO;
    commit;

end CLIENTE_INTERNO_MODIFICAR;



 CREATE OR REPLACE EDITIONABLE PROCEDURE CLIENTE_INTERNO_LISTAR (cur_listar out SYS_REFCURSOR) 
is

begin
  open cur_listar for select '{"rut_CLIENTE_INTERNO": '|| rut_CLIENTE_INTERNO||', "nombre_CLIENTE_INTERNO": "'||nombre_CLIENTE_INTERNO||',"direccion_CLIENTE_INTERNO": "'||direccion_CLIENTE_INTERNO||',"telefono_CLIENTE_INTERNO": "'||telefono_CLIENTE_INTERNO||',"correo_CLIENTEINTERNO": "'||correo_CLIENTE_INTERNO||',"contrasena_CLIENTE_INTERNO": "'||contrasena_CLIENTE_INTERNO||',"cargo_id_cargo": "'||cargo_id_cargo||'"}' request from CLIENTE_INTERNO;
end CLIENTE_INTERNO_LISTAR;
------------------------------------------------------------------------------------------------------------------------------
----------------------------------------SP PROVEEDOR -------------------------------------------------------------------------
create or replace PROCEDURE PROVEEDOR_ELIMINAR (v_rut_proveedor Integer) is
begin 
    DELETE proveedor
    WHERE rut_proveedor = v_rut_proveedor;
    commit;

end PROVEEDOR_ELIMINAR;


create or replace PROCEDURE PROVEEDOR_AGREGAR (
v_rut_proveedor Integer, 
v_nombre_proveedor varchar2,
v_direccion_proveedor VARCHAR2,
v_telefono_proveedor INTEGER, 
v_correo_proveedor VARCHAR2, 
v_contrasena_proveedor VARCHAR2,
v_id_cargo INTEGER) is
begin 
  insert into proveedor(rut_proveedor,
  nombre_proveedor,
  direccion_proveedor,
  telefono_proveedor,
  correo_proveedor,
  contrasena_proveedor,
  cargo_id_cargo) values(v_rut_proveedor,v_nombre_proveedor,v_direccion_proveedor,v_telefono_proveedor,v_correo_proveedor,v_contrasena_proveedor,v_id_cargo);
  commit;

end PROVEEDOR_AGREGAR;


create or replace PROCEDURE PROVEEDOR_MODIFICAR (v_rut_proveedor Integer,v_nombre_proveedor varchar2,
v_direccion_proveedor VARCHAR2,
v_telefono_proveedor INTEGER, 
v_correo_proveedor VARCHAR2, 
v_contrasena_proveedor VARCHAR2,
v_id_cargo INTEGER) is
begin 
    UPDATE proveedor
    SET nombre_proveedor = v_nombre_proveedor,
    direccion_proveedor = v_direccion_proveedor,
    telefono_proveedor = v_telefono_proveedor, 
    correo_proveedor = v_correo_proveedor,
    contrasena_proveedor = v_contrasena_proveedor,
    cargo_id_cargo = v_id_cargo
    WHERE rut_proveedor = v_rut_proveedor;
    commit;

end PROVEEDOR_MODIFICAR;

 

 CREATE OR REPLACE EDITIONABLE PROCEDURE PROVEEDOR_LISTAR (cur_listar out SYS_REFCURSOR) 
is

begin
  open cur_listar for select '{"rut_proveedor": '|| rut_proveedor||', "nombre_proveedor": "'||nombre_proveedor||',"direccion_proveedor": "'||direccion_proveedor||',"telefono_proveedor": "'||telefono_proveedor||',"correo_proveedor": "'||correo_proveedor||',"contrasena_proveedor": "'||contrasena_proveedor||',"cargo_id_cargo": "'||cargo_id_cargo||'"}' request from proveedor;
end PROVEEDOR_LISTAR;
------------------------------------------------------------------------------------------------------------------------------
----------------------------------------SP TRANSPORTISTA ---------------------------------------------------------------------
create or replace PROCEDURE PROVEEDOR_ELIMINAR (v_rut_proveedor Integer) is
begin 
    DELETE proveedor
    WHERE rut_proveedor = v_rut_proveedor;
    commit;

end PROVEEDOR_ELIMINAR;


create or replace PROCEDURE PROVEEDOR_AGREGAR (
v_rut_proveedor Integer, 
v_nombre_proveedor varchar2,
v_direccion_proveedor VARCHAR2,
v_telefono_proveedor INTEGER, 
v_correo_proveedor VARCHAR2, 
v_contrasena_proveedor VARCHAR2,
v_id_cargo INTEGER) is
begin 
  insert into proveedor(rut_proveedor,
  nombre_proveedor,
  direccion_proveedor,
  telefono_proveedor,
  correo_proveedor,
  contrasena_proveedor,
  cargo_id_cargo) values(v_rut_proveedor,v_nombre_proveedor,v_direccion_proveedor,v_telefono_proveedor,v_correo_proveedor,v_contrasena_proveedor,v_id_cargo);
  commit;

end PROVEEDOR_AGREGAR;


create or replace PROCEDURE PROVEEDOR_MODIFICAR (v_rut_proveedor Integer,v_nombre_proveedor varchar2,
v_direccion_proveedor VARCHAR2,
v_telefono_proveedor INTEGER, 
v_correo_proveedor VARCHAR2, 
v_contrasena_proveedor VARCHAR2,
v_id_cargo INTEGER) is
begin 
    UPDATE proveedor
    SET nombre_proveedor = v_nombre_proveedor,
    direccion_proveedor = v_direccion_proveedor,
    telefono_proveedor = v_telefono_proveedor, 
    correo_proveedor = v_correo_proveedor,
    contrasena_proveedor = v_contrasena_proveedor,
    cargo_id_cargo = v_id_cargo
    WHERE rut_proveedor = v_rut_proveedor;
    commit;

end PROVEEDOR_MODIFICAR;

 

 CREATE OR REPLACE EDITIONABLE PROCEDURE PROVEEDOR_LISTAR (cur_listar out SYS_REFCURSOR) 
is

begin
  open cur_listar for select '{"rut_proveedor": '|| rut_proveedor||', "nombre_proveedor": "'||nombre_proveedor||',"direccion_proveedor": "'||direccion_proveedor||',"telefono_proveedor": "'||telefono_proveedor||',"correo_proveedor": "'||correo_proveedor||',"contrasena_proveedor": "'||contrasena_proveedor||',"cargo_id_cargo": "'||cargo_id_cargo||'"}' request from proveedor;
end PROVEEDOR_LISTAR;

------------------------------------------------------------------------------------------------------------------------------
----------------------------------------SP CONTRATO --------------------------------------------------------------------------

create or replace PROCEDURE CONTRATO_ELIMINAR (v_id_contrato Integer) is
begin 
    DELETE contrato
    WHERE id_contrato = v_id_contrato;
    commit;

end CONTRATO_ELIMINAR;


create or replace PROCEDURE CONTRATO_AGREGAR (v_documento_contrato BFILE, v_fecha_contrato date,v_rut_cliente_externo integer,v_rut_administrador integer,v_tipo_contrato varchar2) is
begin 
  insert into CONTRATO(id_contrato,documento_contrato,fecha_contrato,rut_cliente_externo,rut_administrador,tipo_contrato) 
  values(ISEQ$$_76839.nextval,v_documento_contrato,v_fecha_contrato,v_rut_cliente_externo,v_rut_administrador,v_tipo_contrato);
  commit;

end CONTRATO_AGREGAR;


create or replace PROCEDURE CONTRATO_MODIFICAR (v_id_contrato Integer,v_documento_contrato BFILE, v_fecha_contrato date,v_rut_cliente_externo integer,v_rut_administrador integer,v_tipo_contrato varchar2) is
begin 
    UPDATE contrato
    SET contrato.documento_contrato = v_documento_contrato,
    contrato.fecha_contrato = v_fecha_contrato,
    contrato.rut_cliente_externo = v_rut_cliente_externo,
    contrato.rut_administrador = v_rut_administrador,
    contrato.tipo_contrato = v_tipo_contrato
    WHERE id_contrato = v_id_contrato;
    commit;

end CONTRATO_MODIFICAR;

 

 CREATE OR REPLACE EDITIONABLE PROCEDURE CONTRATO_LISTAR (cur_listar out SYS_REFCURSOR) 
is

begin
    open cur_listar for select '{"id_contrato": '|| id_contrato||', "documento_contrato": "'||documento_contrato||',"fecha_contrato": "'||fecha_contrato||',"rut_cliente_externo": "'||cliente_externo_rut_cliente_externo||',"rut_administrador": "'||administrador_rut_administrador||',"tipo_contrato": "'||tipo_contrato||'"}' request from contrato;
end CONTRATO_LISTAR;


------------------------------------------------------------------------------------------------------------------------------
----------------------------------------SP PRODUCTO --------------------------------------------------------------------------

create or replace PROCEDURE PRODUCTO_ELIMINAR (v_id_producto Integer) is
begin 
    DELETE PRODUCTO
    WHERE id_producto = v_id_producto;
    commit;

end PRODUCTO_ELIMINAR;


create or replace PROCEDURE PRODUCTO_AGREGAR (v_nombre_producto varchar2, v_cantidad_producto integer,rut_proveedor integer) is
begin 
  insert into PRODUCTO(id_producto,nombre_producto,cantidad_producto,rut_proveedor) 
  values(ISEQ$$_76844.nextval,v_nombre_producto,v_cantidad_producto,rut_proveedor);
  commit;

end PRODUCTO_AGREGAR;


create or replace PROCEDURE PRODUCTO_MODIFICAR (v_id_producto Integer,v_nombre_producto varchar2, v_cantidad_producto integer,v_rut_proveedor integer) is
begin 
    UPDATE PRODUCTO
    SET nombre_producto = v_nombre_producto,
    cantidad_producto = v_cantidad_producto,
    rut_proveedor = v_rut_proveedor
    WHERE id_producto = v_id_producto;
    commit;

end PRODUCTO_MODIFICAR;

 

 CREATE OR REPLACE EDITIONABLE PROCEDURE PRODUCTO_LISTAR (cur_listar out SYS_REFCURSOR) 
is

begin
    open cur_listar for select '{"id_producto": '|| id_producto||', "nombre_producto": "'||nombre_producto||',"cantidad_producto": "'||cantidad_producto||',"rut_proveedor": "'||rut_proveedor||',"rut_administrador": "'||'"}' request from PRODUCTO;
end PRODUCTO_LISTAR;

------------------------------------------------------------------------------------------------------------------------------
----------------------------------------SP LOGIN -----------------------------------------------------------------------------

create or replace PROCEDURE                   "CLIENTE_EXTERNO_LOGIN" 
(
    v_username varchar2,
    v_password varchar2
)
as
    uname varchar2(120);
    pass varchar2(120);
    begin
      select rut_cliente_externo,contrasena_cliente_externo
      into uname,pass 
      from cliente_externo 
      where rut_cliente_externo=v_username and contrasena_cliente_externo=v_password;
        DBMS_OUTPUT.PUT_LINE('{"cargo":"Cliente Externo"}');

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('{"message":"ERROR: CLIENTE NO EXISTE"}');

end CLIENTE_EXTERNO_LOGIN;


create or replace PROCEDURE                   "CLIENTE_INTERNO_LOGIN" 
(
    v_username varchar2,
    v_password varchar2
)
as
    uname varchar2(120);
    pass varchar2(120);
    begin
      select rut_cliente_interno,contrasena_cliente_interno
      into uname,pass 
      from cliente_interno
      where rut_cliente_interno=v_username and contrasena_cliente_interno=v_password;
        DBMS_OUTPUT.PUT_LINE('{"cargo":"Cliente Interno"}');

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('{"message":"ERROR: CLIENTE NO EXISTE"}');

end CLIENTE_INTERNO_LOGIN;


create or replace PROCEDURE                   "PROVEEDOR_LOGIN" 
(
    v_username varchar2,
    v_password varchar2
)
as
    uname varchar2(120);
    pass varchar2(120);
    begin
      select rut_proveedor,contrasena_proveedor
      into uname,pass 
      from proveedor 
      where rut_proveedor=v_username and contrasena_proveedor=v_password;
        DBMS_OUTPUT.PUT_LINE('{"cargo":"Proveedor"}');

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('{"message":"ERROR: PROVEEDOR NO EXISTE"}');

end PROVEEDOR_LOGIN;


create or replace PROCEDURE                   "TRANSPORTISTA_LOGIN" 
(
    v_username varchar2,
    v_password varchar2
)
as
    uname varchar2(120);
    pass varchar2(120);
    begin
      select rut_transportista,contrasena_transportista
      into uname,pass 
      from transportista 
      where rut_transportista=v_username and contrasena_transportista=v_password;
        DBMS_OUTPUT.PUT_LINE('{"cargo":"Transportista"}');

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            DBMS_OUTPUT.PUT_LINE('{"message":"ERROR: PROVEEDOR NO EXISTE"}');

end TRANSPORTISTA_LOGIN;


'''