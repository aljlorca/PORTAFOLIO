# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models


class Calidad(models.Model):
    id_calidad = models.BigIntegerField(primary_key=True)
    descripcion_calidad = models.CharField(max_length=150)
    estado_fila = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'calidad'


class Carga(models.Model):
    id_carga = models.BigIntegerField(primary_key=True)
    capacidad_carga = models.CharField(max_length=300)
    refrigeracion_carga = models.CharField(max_length=1)
    tamano_carga = models.CharField(max_length=150)
    id_subasta = models.ForeignKey('Subasta', models.DO_NOTHING, db_column='id_subasta')
    id_usuario = models.ForeignKey('Usuario', models.DO_NOTHING, db_column='id_usuario')
    estado_fila = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'carga'


class Cargo(models.Model):
    id_cargo = models.BigIntegerField(primary_key=True)
    nombre_cargo = models.CharField(max_length=50)
    estado_fila = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'cargo'


class Carrito(models.Model):
    id_carrito = models.BigIntegerField(primary_key=True)
    fecha_carrito = models.DateField()
    monto_carrito = models.BigIntegerField()
    estado_fila = models.CharField(max_length=1)
    id_usuario = models.ForeignKey('Usuario', models.DO_NOTHING, db_column='id_usuario')

    class Meta:
        managed = False
        db_table = 'carrito'


class Contrato(models.Model):
    id_contrato = models.CharField(primary_key=True, max_length=150)
    documento_contrato = models.CharField(max_length=125)
    fecha_contrato = models.DateField()
    tipo_contrato = models.CharField(max_length=50)
    id_empresa = models.ForeignKey('Empresa', models.DO_NOTHING, db_column='id_empresa')
    estado_fila = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'contrato'


class Empresa(models.Model):
    id_empresa = models.BigIntegerField(primary_key=True)
    duns_empresa = models.CharField(max_length=9)
    razon_social_empresa = models.CharField(max_length=70)
    direccion_empresa = models.CharField(max_length=150)
    id_tipo_empresa = models.ForeignKey('TipoEmpresa', models.DO_NOTHING, db_column='id_tipo_empresa')
    estado_fila = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'empresa'
        unique_together = (('duns_empresa', 'razon_social_empresa'),)


class Factura(models.Model):
    id_factura = models.BigIntegerField(primary_key=True)
    fecha_factura = models.DateField()
    monto_factura = models.BigIntegerField()
    estado_fila = models.CharField(max_length=1)
    id_venta = models.ForeignKey('Venta', models.DO_NOTHING, db_column='id_venta')
    id_usuario = models.ForeignKey('Usuario', models.DO_NOTHING, db_column='id_usuario')

    class Meta:
        managed = False
        db_table = 'factura'


class Pedido(models.Model):
    id_pedido = models.BigIntegerField(primary_key=True)
    descripcion_pedido = models.CharField(max_length=150)
    fecha_sla_pedido = models.DateField()
    id_usuario = models.ForeignKey('Usuario', models.DO_NOTHING, db_column='id_usuario')
    estado_fila = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'pedido'


class Postulacion(models.Model):
    id_postulacion = models.CharField(primary_key=True, max_length=150)
    descripcion_postulacion = models.CharField(max_length=150)
    estado_postulacion = models.CharField(max_length=50)
    id_venta = models.ForeignKey('Venta', models.DO_NOTHING, db_column='id_venta', blank=True, null=True)
    estado_fila = models.CharField(max_length=1)
    id_usuario = models.ForeignKey('Usuario', models.DO_NOTHING, db_column='id_usuario', blank=True, null=True)
    id_producto = models.ForeignKey('Producto', models.DO_NOTHING, db_column='id_producto')

    class Meta:
        managed = False
        db_table = 'postulacion'


class Producto(models.Model):
    id_producto = models.CharField(primary_key=True, max_length=150)
    nombre_producto = models.CharField(max_length=150)
    cantidad_producto = models.CharField(max_length=25, blank=True, null=True)
    precio_producto = models.BigIntegerField()
    imagen_producto = models.CharField(max_length=150, blank=True, null=True)
    id_calidad = models.ForeignKey(Calidad, models.DO_NOTHING, db_column='id_calidad')
    saldo_producto = models.CharField(max_length=1)
    estado_fila = models.CharField(max_length=1)
    id_usuario = models.ForeignKey('Usuario', models.DO_NOTHING, db_column='id_usuario')
    descripcion_producto = models.CharField(max_length=500)

    class Meta:
        managed = False
        db_table = 'producto'


class Reporte(models.Model):
    id_reporte = models.BigIntegerField(primary_key=True)
    descripcion_reporte = models.CharField(max_length=150)
    productos_entregados_reporte = models.CharField(max_length=150)
    productos_perdidos_reporte = models.CharField(max_length=150)
    productos_restantes_reporte = models.CharField(max_length=150)
    id_venta = models.ForeignKey('Venta', models.DO_NOTHING, db_column='id_venta', blank=True, null=True)
    estado_fila = models.CharField(max_length=1)
    id_usuario = models.ForeignKey('Usuario', models.DO_NOTHING, db_column='id_usuario')

    class Meta:
        managed = False
        db_table = 'reporte'


class ResumenVenta(models.Model):
    id_resumen = models.BigIntegerField(primary_key=True)
    monto_neto_venta = models.BigIntegerField()
    descripcion_resumen = models.CharField(max_length=500)
    id_venta = models.ForeignKey('Venta', models.DO_NOTHING, db_column='id_venta')
    cantidad_producto_resumen = models.FloatField()
    estado_fila = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'resumen_venta'


class Subasta(models.Model):
    id_subasta = models.BigIntegerField(primary_key=True)
    monto_subasta = models.BigIntegerField()
    id_venta = models.ForeignKey('Venta', models.DO_NOTHING, db_column='id_venta', blank=True, null=True)
    fecha_subasta = models.DateField()
    estado_fila = models.CharField(max_length=1)
    id_usuario = models.ForeignKey('Usuario', models.DO_NOTHING, db_column='id_usuario', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'subasta'


class TipoEmpresa(models.Model):
    id_tipo_empresa = models.BigIntegerField(primary_key=True)
    tipo_empresa = models.CharField(max_length=150)
    estado_fila = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'tipo_empresa'


class Usuario(models.Model):
    id_usuario = models.BigIntegerField(primary_key=True)
    numero_identificacion_usuario = models.CharField(max_length=20)
    nombre_usuario = models.CharField(max_length=150)
    direccion_usuario = models.CharField(max_length=500)
    telefono_usuario = models.CharField(max_length=20)
    correo_usuario = models.CharField(max_length=150)
    contrasena_usuario = models.CharField(max_length=64)
    usuario_vigente = models.CharField(max_length=1)
    fecha_creacion_usuario = models.DateField()
    fecha_sesion_usuario = models.DateField(blank=True, null=True)
    administrador_usuario = models.CharField(max_length=1)
    id_cargo = models.ForeignKey(Cargo, models.DO_NOTHING, db_column='id_cargo')
    id_empresa = models.ForeignKey(Empresa, models.DO_NOTHING, db_column='id_empresa', blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'usuario'
        unique_together = (('numero_identificacion_usuario', 'telefono_usuario', 'correo_usuario'),)


class Venta(models.Model):
    id_venta = models.BigIntegerField(primary_key=True)
    descripcion_venta = models.CharField(max_length=500)
    estado_venta = models.CharField(max_length=50)
    monto_bruto_venta = models.BigIntegerField()
    iva = models.CharField(max_length=4)
    monto_neto_venta = models.BigIntegerField()
    fecha_venta = models.DateField()
    tipo_venta = models.CharField(max_length=1)
    id_usuario = models.ForeignKey(Usuario, models.DO_NOTHING, db_column='id_usuario')
    cantidad_venta = models.FloatField(blank=True, null=True)
    monto_transporte = models.BigIntegerField(blank=True, null=True)
    monto_aduanas = models.BigIntegerField(blank=True, null=True)
    pago_servicio = models.BigIntegerField(blank=True, null=True)
    comision_venta = models.BigIntegerField(blank=True, null=True)
    estado_fila = models.CharField(max_length=1)

    class Meta:
        managed = False
        db_table = 'venta'
